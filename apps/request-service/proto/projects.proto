syntax = "proto3";

package projects;

message Project {
  string id = 1;
  string name = 2;
  string status = 3;
  string createdAt = 5;
  string updatedAt = 6;
  string deploymentUrl = 7;
  ProjectType projectType = 8;
  InstanceType instanceType = 9;
}

message Deployment {
  string id = 1;
  string createdAt = 2;
  string updatedAt = 3;
  string status = 4;
  oneof type {
    ImageData imageData = 5;
    WebServiceData webServiceData = 6;
    StaticSiteData staticSiteData = 7;
  }
  optional Env env = 8;
}


service ProjectsService {
  rpc GetAllProjects(GetUserDto) returns (Projects) {}
  rpc GetProject(GetProjectDto) returns (PopulatedProject) {}
  rpc CreateProject(CreateProjectDto) returns (PopulatedProject) {}
  rpc DeleteProject(GetProjectDto) returns (Project) {}

  rpc UpdateInstanceType(UpdateInstanceTypeDto) returns (Project) {}

  rpc CreateDeployment(CreateDeploymentDto) returns (Deployment) {}
  rpc GetDeployments(GetDeploymentsDto) returns (Deployments) {}
  rpc GetDeployment(GetDeploymentDto) returns (Deployment) {}
  rpc StopDeployment(GetDeploymentDto) returns (Deployment) {}
  rpc DeleteDeployment(GetDeploymentDto) returns (Deployment) {}

  rpc RetryDeployment(GetDeploymentDto) returns (Deployment) {}
  rpc RollbackProject(RollbackProjectDto) returns (Deployment) {}
}

service EnvService {
  rpc CreateEnvironment(CreateEnvDto) returns (Env) {}
  rpc GetEnvironment(GetEnvDto) returns (Env) {}
  rpc GetAllEnvironments(GetAllEnvDto) returns (Env) {}
  rpc UpdateEnvironment(UpdateEnvDto) returns (Env) {}
  rpc DeleteEnvironment(GetEnvDto) returns (Env) {}
}

message RollbackProjectDto {
  string projectId = 1;
  string deploymentId = 2;
}

message CreateEnvDto {
  string userId = 1;
  string name = 2;
  map<string,string> envs = 3;
}

message GetEnvDto {
  string envId = 1;
}

message GetAllEnvDto {
  string userId = 1;
}

message UpdateEnvDto {
  string envId = 1;
  map<string,string> envs = 2;
}

message Env {
  string id = 1;
  string name = 3;
  map<string, string> envs = 4;
  string createdAt = 5;
  string updatedAt = 6;
}

message GetUserDto {
  string userId = 1;
}

message GetProjectDto {
  string projectId = 1;
}

message PopulatedProject {
  string id = 1;
  string name = 2;
  string status = 3;
  string createdAt = 5;
  string updatedAt = 6;
  string deploymentUrl = 7;
  ProjectType projectType = 8;
  repeated Deployment deployments = 9;
}


message Projects {
  repeated Project projects = 1;
}

message UpdateInstanceTypeDto {
  string id = 1;
  InstanceType instanceType = 2;
}

message ImageDeployments {
  repeated ImageData imageDeployments = 1;
}

message ImageData {
  string imageUrl = 1;
  optional string accessToken = 2;
  int32 port = 3;
}

message WebServiceData {
  string repoUrl = 1;
  string runCommand = 2;
  string buildCommand = 3;
  optional string accessToken = 4;
  optional string branch = 5;
  optional string commitId = 6;
  int32 port = 7;
}

message StaticSiteData {
  string repoUrl = 1;
  string outDir = 2;
  string buildCommand = 3;
  optional string accessToken = 4;
  optional string branch = 5;
  optional string commitId = 6;
}

message GetDeploymentByUserIdDto {
  string userId = 1;
}

message UpdateDeploymentDto {
  string id = 1;
  Updates updates = 2;

}

message UpdateProjectNameDto {
  string id = 1;
  string name = 2;
}


message Updates {
  optional string repoName = 1;
  string userId = 2;
  oneof type {
    ImageData imageData = 3;
    WebServiceData webServiceData = 4;
    StaticSiteData staticSiteData = 5;
  }
}
message CreateProjectDto {
  optional string name = 1;
  ProjectType projectType = 2;
  InstanceType instanceType = 3;
  string userId = 4;
  oneof details {
    ImageData imageData = 5;
    WebServiceData webServiceData = 6;
    StaticSiteData staticSiteData = 7;
  }
  optional string env = 8;
}
message CreateDeploymentDto {
  string projectId = 1;
  string userId = 2;
  optional string env = 3;
  oneof type {
    ImageData imageData = 4;
    WebServiceData webServiceData = 5;
    StaticSiteData staticSiteData = 6;
  }
}

message Deployments {
  repeated Deployment deployments = 1;
}
message GetDeploymentDto { string deploymentId = 1; }
message GetDeploymentsDto { string projectId = 1; }



enum ProjectType {
  webService = 0;
  staticSite = 1;
  dockerImage = 2;
}

enum InstanceType {
  tier_0 = 0;
  tier_1 = 1;
  tier_2 = 2;
}
